{"version":3,"sources":["components/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["Pokemon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","edit","bind","assertThisInitialized","closeEdit","_id","document","getElementById","classList","add","remove","event","_this2","preventDefault","formEdit","target","containerFormEdit","parentNode","id","pokemon","serialize","axios","method","url","data","then","res","hash","setState","type1","atk","def","concat","setTimeout","style","display","_this3","react_default","a","createElement","className","name","type","onClick","openEdit","src","toLowerCase","alt","weather1","onSubmit","defaultValue","placeholder","Component","App","pokemons","page","filter","list","word","value","length","_this4","_this5","_this6","action","onChange","prev","next","map","Pokemon_Pokemon","assign","key","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e41178b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport serialize from 'form-serialize'\r\nimport axios from 'axios'\r\n\r\nexport default class Pokemon extends Component {\r\n\r\n\tconstructor(props) {\r\n\t  super(props)\r\n\t  this.state = { ...props }\r\n\r\n\t  this.edit = this.edit.bind(this)\r\n\t  this.closeEdit = this.closeEdit.bind(this)\r\n\t}\r\n\r\n\topenEdit(_id){\r\n\t\tlet formEdit = document.getElementById('formEdit'+_id)\r\n\t\tformEdit.classList.add('show')\r\n\t}\r\n\r\n\tcloseEdit(_id){\r\n\t\tlet formEdit = document.getElementById('formEdit'+_id)\r\n\t\tformEdit.classList.remove('show')\r\n\t}\r\n\r\n\tedit(event){\r\n\t\tevent.preventDefault()\r\n\t\tconst formEdit = event.target\r\n\t\tconst containerFormEdit = document.getElementById(formEdit.parentNode.id)\r\n\t\tconst pokemon = serialize(formEdit)\r\n\r\n\t\taxios({\r\n      method: 'POST',\r\n      url: 'http://18.220.105.29/poke_api/pokemon/modify/',\r\n      data: pokemon\r\n    })\r\n    .then(res => {\r\n    \tconst data = serialize(formEdit, { hash: true})\r\n\t\t\tthis.setState({ ...this.state, type1: data.type1, atk: data.atk, def: data.def })\r\n\t\t\tcontainerFormEdit.classList.remove('show')\r\n    })\r\n\t}\r\n\r\n\tremove(_id){\r\n\t\tconst formEdit = document.getElementById('formEdit'+_id)\r\n\t\tconst pokemon = `id=${_id}`\r\n\r\n\t\taxios({\r\n      method: 'POST',\r\n      url: 'http://18.220.105.29/poke_api/pokemon/remove/',\r\n      data: pokemon\r\n    })\r\n    .then(res => {\r\n    \tformEdit.parentNode.classList.add('hide')\r\n    \tsetTimeout(() => {\r\n    \t\tformEdit.parentNode.style.display = 'none'\r\n    \t}, 700)\r\n    })\r\n\t}\r\n\r\n\trender() {\r\n\t  return (\r\n\t  \t\t<div className=\"pokemon_card\">\r\n\t  \t\t\t<h3>{this.state.name}</h3>\r\n\t  \t\t\t<button type=\"button\" className=\"btn_editar\" onClick={() => this.openEdit(this.state.id)}>Editar</button>\t\r\n\t  \t\t\t<img \r\n\t  \t\t\tsrc={`http://pokestadium.com/sprites/xy/${this.state.name.toLowerCase()}.gif`} \r\n\t  \t\t\talt={this.state.name}/>\r\n\t  \t\t\t<ul>\r\n\t  \t\t\t\t<div>\r\n\t  \t\t\t\t\t<li>Type: {this.state.type1}</li>\r\n\t  \t\t\t\t\t<li>Weather: {this.state.weather1}</li>\r\n\t  \t\t\t\t</div>\r\n\r\n\t  \t\t\t\t<div>\r\n\t  \t\t\t\t\t<li>Atk: {this.state.atk}</li>\r\n\t  \t\t\t\t\t<li>Def: {this.state.def}</li>\r\n\t  \t\t\t\t</div>\r\n\t  \t\t\t</ul>\r\n\r\n\t  \t\t\t<div className=\"formulario_edicao\" id={\"formEdit\"+this.state.id}>\r\n\t  \t\t\t\t<form onSubmit={this.edit}>\r\n\t  \t\t\t\t\t<h4>Bulbasaur</h4>\r\n\r\n\t  \t\t\t\t\t<input type=\"hidden\"\r\n\t  \t\t\t\t\tname=\"id\" \r\n\t  \t\t\t\t\tdefaultValue={this.state.id}/>\r\n\r\n\t  \t\t\t\t\t<label>Type</label>\r\n\t  \t\t\t\t\t<input type=\"text\" placeholder=\"Type\"\r\n\t  \t\t\t\t\tname=\"type1\" \r\n\t  \t\t\t\t\tdefaultValue={this.state.type1}/>\r\n\r\n\t  \t\t\t\t\t<label>Atk</label>\r\n\t  \t\t\t\t\t<input type=\"text\" placeholder=\"Atk\"\r\n\t  \t\t\t\t\tname=\"atk\" \r\n\t  \t\t\t\t\tdefaultValue={this.state.atk}/>\r\n\r\n\t  \t\t\t\t\t<label>Def</label>\r\n\t  \t\t\t\t\t<input type=\"text\" placeholder=\"Def\" \r\n\t  \t\t\t\t\tname=\"def\" \r\n\t  \t\t\t\t\tdefaultValue={this.state.def}/>\r\n\r\n\t  \t\t\t\t\t<button type=\"submit\" className=\"btn salvar\">Salvar</button>\r\n\t  \t\t\t\t\t<button type=\"button\" \r\n\t  \t\t\t\t\tclassName=\"btn excluir\"\r\n\t  \t\t\t\t\tonClick={() => this.remove(this.state.id)}>Excluir</button>\r\n\t  \t\t\t\t\t\r\n\t  \t\t\t\t\t<button type=\"button\" \r\n\t  \t\t\t\t\tclassName=\"btn cancelar\" \r\n\t  \t\t\t\t\tonClick={() => this.closeEdit(this.state.id)}>Cancelar</button>\r\n\t  \t\t\t\t</form>\t\r\n\t  \t\t\t</div>\r\n\t  \t\t</div>\r\n\t  )\r\n\t}\r\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport Pokemon from './components/Pokemon'\n\nexport default class App extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      pokemons: [],\n      page: 1\n    }\n\n    this.filter = this.filter.bind(this)\n    this.list()\n  }\n\n  filter(event){\n    const word = event.target.value\n\n    if(word.length === 0) {\n      this.list()\n      return\n    }\n\n    if(word.length > 2){\n      axios({\n        method: 'POST',\n        url: 'http://18.220.105.29/poke_api/pokemon/filter/',\n        data: `word=${word}`\n      })\n      .then(res => {\n        this.setState({ pokemons: res.data})\n      })\n    }\n  }\n\n  list(){\n    axios({\n      method: 'GET',\n      url: `http://18.220.105.29/poke_api/pokemon/list/${this.state.page}`,\n    })\n    .then(res => this.setState({ pokemons: res.data}))\n  }\n\n  prev(){\n    if(this.state.page > 1)\n      this.setState({ page: this.state.page-1 }, () => {this.list()})\n    else if(this.state.page === 1)\n      this.setState({ page: 1 }, this.list())\n  }\n\n  next(){\n    this.setState({ page: this.state.page+1 }, () => {this.list()})\n  }\n\n  render() {\n    return (\n      <div>\n        <img src={process.env.PUBLIC_URL + '/pokemon_logo.png'} className=\"poke_logo\" alt=\"Pokémon\"/>\n        <div className=\"pokemon_filtro\">\n          <form action=\"\">\n            <input type=\"text\" placeholder=\"Digite o nome do Pokémon\" \n            onChange={this.filter}/>\n          </form>\n        </div>\n        \n        <div className=\"pokemon_pager\">\n          <button type=\"button\" onClick={() => this.prev()}>Anterior</button>\n          <button type=\"button\" onClick={() => this.next()}>Próximo</button>\n        </div>\n\n        <div className=\"pokemon_container\">\n          { this.state.pokemons.map((pokemon) => <Pokemon key={pokemon.id} { ...pokemon }/> )}\n        </div>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}